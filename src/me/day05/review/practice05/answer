- 아래 명제의 참, 거짓 판단해보기.
    1. 클래스 설계에서 모든 객체들이 동일한 값을 가지는 상수 정의시 `final`보다 `static final`로 정의하는 것이 메모리 효율적인 면에서 좋다. (T)
    2. `static` 변수는 인스턴스 객체에 종속된 변수가 아니라 클래스에 종속된 변수이다. (T)
    3. 자바의 메인함수가 `public static void` 인 이유는 클래스 로더에 의해 메인함수가 먼저 메모리에 올라가야 하기 때문이다. (T)
    4. 객체가 메모리에 할당되면 객체가 인스턴스화 되었다고 한다. (T)
    5. 객체의 hashCode 생성은 int 값의 범위가 제한적이기 때문에 충돌이 날 수도 있다. (T)
    6. 객체의 캡슐화는 객체가 외부 (예: main 함수)에서 값을 수정할 수 없게 하기 위함이다. (T)
    7. 기본 생성자는 자바 컴파일러에 의해 항상 자동 생성된다. (F)
    8. 객체지향의 3대 특징은 캡슐화, 상속, 다형성이다. (T)